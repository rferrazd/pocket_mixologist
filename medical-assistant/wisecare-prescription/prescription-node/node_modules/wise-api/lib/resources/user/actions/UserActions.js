"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AppError_1 = __importDefault(require("../../../common/errors/AppError"));
const resource_1 = __importDefault(require("../../../common/resource"));
class User extends resource_1.default {
    constructor(token, url) {
        super(token, url);
        this.url = `${this.url}/users`;
    }
    create(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.post(`${this.url}`, data, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.data)
                .catch((err) => { throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
    get(user) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.get(`${this.url}/${user}`, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.data)
                .catch((err) => { console.log(err); throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
    list(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.post(`${this.url}/list`, data, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.data)
                .catch((err) => { throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
    update(user, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.patch(`${this.url}/${user}`, data, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.status === 204)
                .catch((err) => { throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
    delete(user) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.delete(`${this.url}/${user}`, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.status === 204)
                .catch((err) => { throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
    verify(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.post(`${this.url}/verify`, data, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.data)
                .catch((err) => { throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
    reactivate(username) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request.patch(`${this.url}/${username}/reactivate`, { headers: { Authorization: this.token ? `Bearer ${this.token}` : '' } })
                .then((res) => res.status === 204)
                .catch((err) => { throw new AppError_1.default(err.response.data, err.response.status); });
        });
    }
}
exports.default = User;
