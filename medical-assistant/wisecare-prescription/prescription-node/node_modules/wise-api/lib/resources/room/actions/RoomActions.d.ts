import Resource from 'wise-api/lib/common/resource';
import ICreateRoomDTO from 'wise-api/lib/resources/room/dtos/ICreateRoomDTO';
import IListRoomDTO from 'wise-api/lib/resources/room/dtos/IListRoomDTO';
import IUpdateRoomDTO from 'wise-api/lib/resources/room/dtos/IUpdateRoomDTO';
import IOpenRoomDTO from 'wise-api/lib/resources/room/dtos/IOpenRoomDTO';
import IJoinRoomDTO from 'wise-api/lib/resources/room/dtos/IJoinRoomDTO';
import ICloseRoomDTO from 'wise-api/lib/resources/room/dtos/ICloseRoomDTO';
import ICreateRoomResponse from 'wise-api/lib/resources/room/responses/ICreateRoomResponse';
import IGetRoomResponse from 'wise-api/lib/resources/room/responses/IGetRoomResponse';
import IListRoomResponse from 'wise-api/lib/resources/room/responses/IListRoomResponse';
import IJoinRoomResponse from 'wise-api/lib/resources/room/responses/IJoinRoomResponse';
import IOpenRoomResponse from 'wise-api/lib/resources/room/responses/IOpenRoomResponse';
declare class Room extends Resource {
    constructor(token?: string, url?: string);
    create(data: ICreateRoomDTO): Promise<ICreateRoomResponse>;
    get(room: string): Promise<IGetRoomResponse>;
    list(filters: IListRoomDTO): Promise<IListRoomResponse>;
    update(room: string, data: IUpdateRoomDTO): Promise<void>;
    delete(room: string): Promise<void>;
    open(room: string, data?: IOpenRoomDTO): Promise<IOpenRoomResponse>;
    join(room: string, data?: IJoinRoomDTO): Promise<IJoinRoomResponse>;
    close(room: string, data?: ICloseRoomDTO): Promise<void>;
}
export default Room;
