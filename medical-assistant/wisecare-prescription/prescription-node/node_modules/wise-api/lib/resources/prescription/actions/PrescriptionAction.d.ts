/// <reference types="node" />
import Resource from 'wise-api/lib/common/resource';
import FormData from 'form-data';
import ICreatePrescriptionDTO from 'wise-api/lib/resources/prescription/dtos/ICreatePrescriptionDTO';
import ISignPrescriptionDTO from 'wise-api/lib/resources/prescription/dtos/ISignPrescriptionDTO';
import IUpdatePrescriptionDTO from 'wise-api/lib/resources/prescription/dtos/IUpdatePrescriptionDTO';
import IListPrescriptionsDTO from 'wise-api/lib/resources/prescription/dtos/IListPrescriptionsDTO';
import ICreatePrescriptionResponse from 'wise-api/lib/resources/prescription/responses/ICreatePrescriptionResponse';
import IGetPrescriptionResponse from 'wise-api/lib/resources/prescription/responses/IGetPrescriptionResponse';
import IListPrescriptionResponse from 'wise-api/lib/resources/prescription/responses/IListPrescriptionResponse';
import IListCertificatesResponse from 'wise-api/lib/resources/prescription/responses/IListCertificatesResponse';
import ISignLocalResponse from 'wise-api/lib/resources/prescription/responses/ISignLocalResponse';
import IListVidaasCertificatesResponse from 'wise-api/lib/resources/prescription/responses/IListVidaasCertificatesResponse';
declare class Plan extends Resource {
    constructor(token?: string, url?: string);
    create(data: ICreatePrescriptionDTO): Promise<ICreatePrescriptionResponse>;
    createCustom(data: FormData): Promise<ICreatePrescriptionResponse>;
    get(prescription: string): Promise<IGetPrescriptionResponse>;
    list(data: IListPrescriptionsDTO): Promise<IListPrescriptionResponse>;
    update(prescription: string, data: IUpdatePrescriptionDTO): Promise<boolean>;
    delete(prescription: string): Promise<boolean>;
    listCertificates(): Promise<IListCertificatesResponse>;
    signLocal(certificateId: string, dataToSign: string): Promise<ISignLocalResponse[]>;
    sign(prescription: string, data: ISignPrescriptionDTO): Promise<boolean>;
    download(prescription: string): Promise<Buffer>;
    listVidaasCertificates(doc: string): Promise<IListVidaasCertificatesResponse>;
}
export default Plan;
