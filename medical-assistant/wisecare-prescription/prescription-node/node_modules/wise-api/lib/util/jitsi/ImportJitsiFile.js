"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const default_1 = __importDefault(require("../../config/default"));
const importJitsiApi = (domain) => new Promise((resolve) => __awaiter(void 0, void 0, void 0, function* () {
    if (window.JitsiMeetExternalAPI) {
        resolve(window.JitsiMeetExternalAPI);
    }
    else {
        const head = document.getElementsByTagName('head')[0];
        const script = document.createElement('script');
        script.setAttribute('type', 'text/javascript');
        script.setAttribute('src', domain ? `https://${domain}/external_api.js` : default_1.default.Meeting.externalApi);
        head.addEventListener('load', (event) => {
            if (event.target.nodeName === 'SCRIPT' && window.JitsiMeetExternalAPI !== undefined) {
                resolve(window.JitsiMeetExternalAPI);
            }
        }, true);
        head.appendChild(script);
    }
}));
exports.default = importJitsiApi;
