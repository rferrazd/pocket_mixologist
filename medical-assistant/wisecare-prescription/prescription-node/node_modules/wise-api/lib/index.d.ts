import Session from 'wise-api/lib/resources/session/actions/SessionActions';
import Room from 'wise-api/lib/resources/room/actions/RoomActions';
import Org from 'wise-api/lib/resources/org/actions/OrgActions';
import OrgUnit from 'wise-api/lib/resources/orgUnit/actions/OrgUnitActions';
import Archive from 'wise-api/lib/resources/archive/actions/ArchiveActions';
import User from 'wise-api/lib/resources/user/actions/UserActions';
import Prescription from 'wise-api/lib/resources/prescription/actions/PrescriptionAction';
import Vidaas from 'wise-api/lib/resources/prescription/actions/VidaasAction';
import Recording from 'wise-api/lib/resources/recording/actions/RecordingActions';
import Skin from 'wise-api/lib/resources/skin/actions/SkinActions';
import Profile from 'wise-api/lib/resources/profile/actions/ProfileActions';
import Invoice from 'wise-api/lib/resources/invoice/actions/InvoiceActions';
import Dashboard from 'wise-api/lib/resources/dashboard/actions/DashboardActions';
import Registry from 'wise-api/lib/resources/registry/actions/RegistryActions';
import Transcription from 'wise-api/lib/resources/transcription/actions/TranscriptionActions';
declare global {
    interface Window {
        JitsiMeetExternalAPI: any;
    }
}
interface ConfigInterface {
    baseUrl?: string;
    token?: string;
    type?: 'SYSTEMCLIENT' | 'ORG' | 'USER';
    login?: string;
    password?: string;
    domain?: string;
}
declare class WiseApi {
    private token;
    private baseUrl;
    org: Org;
    orgUnit: OrgUnit;
    session: Session;
    room: Room;
    archive: Archive;
    user: User;
    prescription: Prescription;
    recording: Recording;
    skin: Skin;
    profile: Profile;
    invoice: Invoice;
    dashboard: Dashboard;
    registry: Registry;
    vidaas: Vidaas;
    transcription: Transcription;
    setup(options?: ConfigInterface): Promise<void>;
    private loginByOrg;
    private loginByUser;
    private loginBySystemClient;
}
declare const initializer: (options?: ConfigInterface) => Promise<WiseApi>;
export default initializer;
